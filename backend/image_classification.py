import os
import requests
from dotenv import load_dotenv
from backend.gemini_chat import translate_remedy  

load_dotenv()


#remedies mockup
REMEDIES = {
    "Early Blight": {
        "en": "Remove affected leaves. Use neem oil spray every 5 days.",
        "hi": "рдкреНрд░рднрд╛рд╡рд┐рдд рдкрддреНрддреЛрдВ рдХреЛ рд╣рдЯрд╛ рджреЗрдВред рд╣рд░ 5 рджрд┐рди рдореЗрдВ рдиреАрдо рддреЗрд▓ рдХрд╛ рдЫрд┐рдбрд╝рдХрд╛рд╡ рдХрд░реЗрдВред",
        "ta": "рокро╛родро┐роХрпНроХрокрпНрокроЯрпНроЯ роЗро▓рпИроХро│рпИ роЕроХро▒рпНро▒ро╡рпБроорпН. роРроирпНродрпБ роиро╛роЯрпНроХро│рпБроХрпНроХрпБ роТро░рпБроорпБро▒рпИ роирпАроорпН роОрогрпНрогрпЖропрпН родрпЖро│ро┐роХрпНроХро╡рпБроорпН.",
        "te": "р░кр▒Нр░░р░ор░╛р░жр░Вр░▓р▒Л р░Йр░ир▒Нр░и р░Жр░Хр▒Бр░▓р░ир▒Б р░др▒Кр░▓р░Чр░┐р░Вр░Ър░Вр░бр░┐. р░кр▒Нр░░р░др░┐ 5 р░░р▒Лр░Ьр▒Бр░▓р░Хр▒Б р░ир░┐р░ор▒Н р░Жр░пр░┐р░▓р▒НтАМр░ир▒Б р░╕р▒Нр░кр▒Нр░░р▒З р░Ър▒Зр░пр░Вр░бр░┐.",
        "bn": "ржЖржХрзНрж░рж╛ржирзНржд ржкрж╛рждрж╛ржЧрзБрж▓рж┐ рж╕рж░рж╛ржиред ржкрзНрж░рждрж┐ рзл ржжрж┐ржирзЗ ржирж┐ржо рждрзЗрж▓ рж╕рзНржкрзНрж░рзЗ ржХрж░рзБржиред"
    },
    "Late Blight": {
        "en": "Spray with copper-based fungicides. Avoid overhead watering.",
        "hi": "рдХреЙрдкрд░-рдЖрдзрд╛рд░рд┐рдд рдлрдлреВрдВрджрдирд╛рд╢рдХреЛрдВ рдХрд╛ рдЫрд┐рдбрд╝рдХрд╛рд╡ рдХрд░реЗрдВред рдКрдкрд░ рд╕реЗ рдкрд╛рдиреА рди рдбрд╛рд▓реЗрдВред",
        "ta": "роХро╛рокрпНрокро░рпН роЕроЯро┐рокрпНрокроЯрпИропро┐ро▓ро╛рой рокрпВроЮрпНроЪрпИ роОродро┐ро░рпНрокрпНрокрпБроХро│ро╛ро▓рпН родрпЖро│ро┐роХрпНроХро╡рпБроорпН. роорпЗро▓ро┐ро░рпБроирпНродрпБ роирпАро░рпН роКро▒рпНро▒ ро╡рпЗрогрпНроЯро╛роорпН.",
        "te": "р░Хр░╛р░кр░░р▒Н р░Жр░зр░╛р░░р░┐р░д р░лр░Вр░Чр▒Ар░╕р▒Ир░бр▒НтАМр░▓р░ир▒Б р░╕р▒Нр░кр▒Нр░░р▒З р░Ър▒Зр░пр░Вр░бр░┐. р░кр▒И р░ир▒Бр░Вр░бр░┐ р░ир▒Ар░Яр░┐р░ир░┐ р░кр▒Лр░пр░бр░В р░ор░╛р░ир░Вр░бр░┐.",
        "bn": "рждрж╛ржорж╛-ржнрж┐рждрзНрждрж┐ржХ ржЫрждрзНрж░рж╛ржХржирж╛рж╢ржХ рж╕рзНржкрзНрж░рзЗ ржХрж░рзБржиред ржЙржкрж░ ржерзЗржХрзЗ ржЬрж▓ ржврж╛рж▓ржмрзЗржи ржирж╛ред"
    },
    "Bacterial Spot": {
        "en": "Use streptomycin or copper sprays. Remove infected parts.",
        "hi": "рд╕реНрдЯреНрд░реЗрдкреНрдЯреЛрдорд╛рдЗрд╕рд┐рди рдпрд╛ рддрд╛рдВрдмреЗ рдХреЗ рд╕реНрдкреНрд░реЗ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред рд╕рдВрдХреНрд░рдорд┐рдд рд╣рд┐рд╕реНрд╕реЛрдВ рдХреЛ рд╣рдЯрд╛ рджреЗрдВред",
        "ta": "ро╕рпНроЯрпНро░рпЖрокрпНроЯрпЛроорпИроЪро┐ройрпН роЕро▓рпНро▓родрпБ роХро╛рокрпНрокро░рпН родрпЖро│ро┐ро╡рпБроХро│рпИрокрпН рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН. рокро╛родро┐роХрпНроХрокрпНрокроЯрпНроЯ рокроХрпБродро┐роХро│рпИ роЕроХро▒рпНро▒ро╡рпБроорпН.",
        "te": "р░╕р▒Нр░Яр▒Нр░░р▒Жр░кр▒Нр░Яр▒Лр░ор▒Ир░╕р░┐р░ир▒Н р░▓р▒Зр░жр░╛ р░Хр░╛р░кр░░р▒Н р░╕р▒Нр░кр▒Нр░░р▒Зр░▓р░ир▒Б р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐. р░Ер░Вр░Яр▒Бр░Хр▒Бр░ир▒Нр░и р░нр░╛р░Чр░╛р░▓р░ир▒Б р░др▒Ар░╕р░┐р░╡р▒Зр░пр░Вр░бр░┐.",
        "bn": "рж╕рзНржЯрзНрж░рзЗржкрзНржЯрзЛржорж╛ржЗрж╕рж┐ржи ржмрж╛ рждрж╛ржорж╛рж░ рж╕рзНржкрзНрж░рзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржиред рж╕ржВржХрзНрж░рж╛ржорж┐ржд ржЕржВрж╢ржЧрзБрж▓рж┐ рж╕рж░рж┐ржпрж╝рзЗ ржлрзЗрж▓рзБржиред"
    },
    "Leaf Mold": {
        "en": "Improve airflow. Apply sulfur spray.",
        "hi": "рд╣рд╡рд╛ рдХрд╛ рд╕рдВрдЪрд╛рд░ рд╕реБрдзрд╛рд░реЗрдВред рд╕рд▓реНрдлрд░ рд╕реНрдкреНрд░реЗ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред",
        "ta": "роХро╛ро▒рпНро▒рпЛроЯрпНроЯродрпНродрпИ роорпЗроорпНрокроЯрпБродрпНродро╡рпБроорпН. роЪро▓рпНрокро░рпН ро╕рпНрокро┐ро░рпЗропрпИ рокропройрпНрокроЯрпБродрпНродро╡рпБроорпН.",
        "te": "р░Чр░╛р░▓р▒Ар░╡р░╛р░др░╛р░╡р░░р░гр░╛р░ир▒Нр░ир░┐ р░ор▒Жр░░р▒Бр░Чр▒Бр░кр░░р░Ър░Вр░бр░┐. р░╕р░▓р▒Нр░лр░░р▒Н р░╕р▒Нр░кр▒Нр░░р▒З р░╡р░╛р░бр░Вр░бр░┐.",
        "bn": "ржмрж╛рждрж╛рж╕ ржЪрж▓рж╛ржЪрж▓ ржЙржирзНржиржд ржХрж░рзБржиред рж╕рж╛рж▓ржлрж╛рж░ рж╕рзНржкрзНрж░рзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржиред"
    },
    "Healthy": {
        "en": "No issues detected. Maintain good watering and fertilization.",
        "hi": "рдХреЛрдИ рд╕рдорд╕реНрдпрд╛ рдирд╣реАрдВ рдкрд╛рдИ рдЧрдИред рдЕрдЪреНрдЫреА рд╕рд┐рдВрдЪрд╛рдИ рдФрд░ рдЙрд░реНрд╡рд░рдХ рдмрдирд╛рдП рд░рдЦреЗрдВред",
        "ta": "рокро┐ро░роЪрпНроЪройрпИ роОродрпБро╡рпБроорпН роХрогрпНроЯро▒ро┐ропрокрпНрокроЯро╡ро┐ро▓рпНро▓рпИ. роиро▓рпНро▓ роирпАро░рпНрокрпНрокро╛роЪройродрпНродрпИропрпБроорпН роЙро░рооро┐роЯрпБродро▓рпИропрпБроорпН рокрпЗрогрпБроЩрпНроХро│рпН.",
        "te": "р░П р░╕р░ор░╕р▒Нр░пр░▓р▒Б р░Хр░ир░┐р░кр░┐р░Вр░Ър░▓р▒Зр░жр▒Б. р░ор░Вр░Ър░┐р░Чр░╛ р░ир▒Ар░░р▒Б р░кр▒Лр░пр░бр░В р░ор░░р░┐р░пр▒Б р░Ор░░р▒Бр░╡р▒Бр░▓р▒Б р░╡р▒Зр░пр░бр░В р░Хр▒Кр░ир░╕р░╛р░Чр░┐р░Вр░Ър░Вр░бр░┐.",
        "bn": "ржХрзЛржиржУ рж╕ржорж╕рзНржпрж╛ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐ред рж╕ржарж┐ржХ ржЬрж▓рж╕рзЗржЪ ржУ рж╕рж╛рж░ ржкрзНрж░ржпрж╝рзЛржЧ ржмржЬрж╛ржпрж╝ рж░рж╛ржЦрзБржиред"
    },
    "k_deficiency": {
    "en": "Apply potassium-rich fertilizer. Avoid overwatering.",
    "hi": "рдкреЛрдЯреИрд╢рд┐рдпрдо рдпреБрдХреНрдд рдЙрд░реНрд╡рд░рдХ рдбрд╛рд▓реЗрдВред рдЕрдзрд┐рдХ рдкрд╛рдиреА рд╕реЗ рдмрдЪреЗрдВред",
    "ta": "рокрпКроЯрпНроЯро╛роЪро┐ропроорпН роиро┐ро▒рпИроирпНрод роЙро░роорпН роЗроЯро╡рпБроорпН. роЕродро┐роХрооро╛роХ роирпАро░рпН роКро▒рпНро▒ ро╡рпЗрогрпНроЯро╛роорпН.",
    "te": "р░кр▒Кр░Яр░╛р░╖р░┐р░пр░В р░Ер░зр░┐р░Хр░Вр░Чр░╛ р░Йр░ир▒Нр░и р░Ор░░р▒Бр░╡р▒Бр░▓р░ир▒Б р░╡р░╛р░бр░Вр░бр░┐. р░Ор░Хр▒Нр░Хр▒Бр░╡ р░ир▒Ар░░р▒Б р░кр▒Лр░пр░бр░В р░ир░┐р░╡р░╛р░░р░┐р░Вр░Ър░Вр░бр░┐.",
    "bn": "ржкржЯрж╛рж╢рж┐ржпрж╝рж╛ржо-рж╕ржорзГржжрзНржз рж╕рж╛рж░ ржкрзНрж░ржпрж╝рзЛржЧ ржХрж░рзБржиред ржЕрждрж┐рж░рж┐ржХрзНржд ржЬрж▓ ржжрзЗржУржпрж╝рж╛ ржПржбрж╝рж┐ржпрж╝рзЗ ржЪрж▓рзБржиред"
}

}

def detect_crop_disease(image_path, lang_code="en"):
    api_key = os.getenv("ROBOFLOW_API_KEY")
    project = os.getenv("ROBOFLOW_PROJECT")
    version = os.getenv("ROBOFLOW_VERSION")

    url = f"https://detect.roboflow.com/{project}/{version}?api_key={api_key}"

    with open(image_path, "rb") as img:
        response = requests.post(url, files={"file": img})

    if response.status_code == 200:
        predictions = response.json().get("predictions", [])
        if not predictions:
            return "ЁЯМ▒ No visible diseases detected."

        result = "ЁЯзк Detected:\n"
        for p in predictions:
            label = p["class"]
            conf = round(p["confidence"] * 100, 2)

            remedy_text = REMEDIES.get(label, {}).get(lang_code)
            if not remedy_text:
                remedy_text = REMEDIES.get(label, {}).get("en", "тЪая╕П No remedy info available.")

            result += f"- {label} ({conf}%)\nЁЯТК Remedy: {remedy_text}\n\n"
        return result
    else:
        print("тЭМ Roboflow error:", response.text)
        return "тЭМ Detection failed."
